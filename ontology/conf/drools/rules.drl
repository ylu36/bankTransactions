package drools
import helper.MyLogger;
import function helper.MyLogger.log;
dialect "java"

rule "1: check if bank is blacklisted"
      activation-group "group"
      lock-on-active true
      salience 10
  when
      $b : Bank(isBlacklisted == true)
  then
      log( "bank is blacklisted" );
end

rule "2: medical rules must go through"
  when
      $b : Bank(isBlacklisted == false) 
      $t : Request(category == "medical")      
  then
      $b.setAverage($t.amount, $t.senderTrusted, $t.receiverTrusted);
      $b.clearFailure();
      $t.setApproval(true);
      log( "medical rule approved");
end

rule "3. weapon rule"
  when
      $b : Bank(isBlacklisted == false)
      $t : Request( category == "weapons")
      if ($b.type.equals("local") && $t.senderTrusted == true && $t.receiverTrusted == true) do[ALLOW1]
      else do [REJECT]
  then
      System.out.println( "here");
  then[ALLOW1]
      $b.setAverage($t.amount, $t.senderTrusted, $t.receiverTrusted);
      $b.clearFailure();
      $t.setApproval(true);
      System.out.println( "weapon rule approved with " + $t.amount);
      drools.halt();
  then[REJECT]
      $t.setApproval(false);
      $b.incrementFailure();
      System.out.println( "weapon rule rejected in rule 3");
      drools.halt();
end

rule "4: A request with amount >$100,000 must have > 1 participants Trusted"
  when
      $b : Bank(isBlacklisted == false)
      $t : Request( amount > 100000)
      if($t.senderTrusted == true || $t.receiverTrusted == true) do[ALLOW2]
      else do [REJECT]
  then
      System.out.println( "here");
  then[ALLOW2]
      $b.setAverage($t.amount, $t.senderTrusted, $t.receiverTrusted);
      $b.clearFailure();
      $t.setApproval(true);
      System.out.println( ">$100,000 request approved");
      drools.halt();
  then[REJECT]
      $t.setApproval(false);
      $b.incrementFailure();
      System.out.println( "2 participants rule rejected");
      drools.halt();
end

rule "5. Rejecting transactions with abnormal amount"
    dialect "mvel"
  when
      $b : Bank(averageAmount > 0)
      $t : Request( amount > 10 * $b.averageAmount)
  then     
      System.out.println( "request rejected because of rule 5"  );
      $t.setApproval(false);
      $b.incrementFailure();
end

rule "6. Bank has under 25% trusted participants"
    dialect "mvel"
  when
      $b : Bank(trustedInstance / frequency < 0.25)
      $t : Request()
  then     
      System.out.println( "need more trustee" );
      $b.incrementFailure();
      $t.setApproval(false);
end

rule "7: Three failed transactions in a row blacklists a bank"
    dialect "mvel"
  when
      $b : Bank(transactionRejected == 3)
  then     
      System.out.println( "blacklist an bank" );
      $b.setBlacklist();
end
