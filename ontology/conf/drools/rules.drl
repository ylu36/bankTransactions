package drools
import helper.MyLogger;
import function helper.MyLogger.success_log;
import function helper.MyLogger.fail_log;
dialect "java"

rule "1: check if bank is blacklisted"
      activation-group "group"
      lock-on-active true
      salience 10
  when
      $b : Bank(isBlacklisted == true)
      $t : Request()
  then
      $t.setApproval(1);
      String message = "REJECT BECAUSE OF RULE 1: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID
                       + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      fail_log(message);
end

rule "2: medical rules must go through"
  when
      $b : Bank(isBlacklisted == false) 
      $t : Request(category == "medical")      
  then
      $b.setAverage($t.amount, $t.senderTrusted, $t.receiverTrusted);
      $b.clearFailure();
      $t.setApproval(0);
      
      String message = "ACCEPT: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID
                        + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      success_log(message);
end

rule "3. weapon rule"
  when
      $b : Bank(isBlacklisted == false)
      $t : Request( category == "weapons")
      if ($b.type.equals("local") && $t.senderTrusted == true && $t.receiverTrusted == true) do[ALLOW1]
      else do [REJECT]
  then
      System.out.println( "here");
  then[ALLOW1]
      $b.setAverage($t.amount, $t.senderTrusted, $t.receiverTrusted);
      $b.clearFailure();
      $t.setApproval(0);
      String message = "ACCEPT: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID
                        + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      success_log(message);      
      drools.halt();
  then[REJECT]
      $t.setApproval(3);
      $b.incrementFailure();
      String message = "REJECT BECAUSE OF RULE 3: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID
                        + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      fail_log(message);
      drools.halt();
end

rule "4: A request with amount >$100,000 must have > 1 participants Trusted"
  when
      $b : Bank(isBlacklisted == false)
      $t : Request( amount > 100000)
      if($t.senderTrusted == true || $t.receiverTrusted == true) do[ALLOW2]
      else do [REJECT]
  then
      System.out.println( "here");
  then[ALLOW2]
      $b.setAverage($t.amount, $t.senderTrusted, $t.receiverTrusted);
      $b.clearFailure();
      $t.setApproval(0);
      String message = "ACCEPT: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID
                        + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      success_log(message);    
      drools.halt();
  then[REJECT]
      $t.setApproval(4);
      $b.incrementFailure();
      String message = "REJECT BECAUSE OF RULE 4: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID
                        + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      fail_log(message);
      drools.halt();
end

rule "5. Rejecting transactions with abnormal amount"
  when
      $b : Bank($b.averageAmount > 0)
      $t : Request( $t.amount > 10 * $b.averageAmount)
  then     
      $t.setApproval(5);System.out.println( $b.averageAmount + " " + $t.amount);
      $b.incrementFailure();
      String message = "REJECT BECAUSE OF RULE 5: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      fail_log(message);
end

rule "6. Bank has under 25% trusted participants"
  when
      $b : Bank((double)trustedInstance / frequency < 0.25)
      $t : Request()
  then     
      String message = "REJECT BECAUSE OF RULE 6: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      fail_log(message);      
      $b.incrementFailure();
      $t.setApproval(6);
end

rule "7: Three failed transactions in a row blacklists a bank"
  when
      $b : Bank(transactionRejected == 3)
      $t : Request()
  then     
      String message = "REJECT BECAUSE OF RULE 7: " + $t.transactionRequestID + '\t' + $t.bankID + '\t' + $t.senderID + '\t' + $t.receiverID + '\t' + $t.amount + '\t' + $t.category + '\t' + $t.timestamp;
      fail_log(message);      
      $b.setBlacklist();
      $t.setApproval(7);
end
